/*************************************************************************************
* qTESLA: an efficient post-quantum signature scheme based on the R-LWE problem
*
* Abstract: CDT constants for the Gaussian sampler
**************************************************************************************/

#ifndef CDTSAMP
#define CDTSAMP

#include <stdint.h>
#include "params.h"


#if defined(_qTESLA_I_)

// Sigma = 22.93, 64-bit precision

#define CDT_ROWS 209
#define CDT_COLS 1

static const int64_t cdt_v[CDT_ROWS*CDT_COLS] = {
    0x0000000000000000LL, // 0
    0x023A1B3F94933202LL, // 1
    0x06AD3C4C19410B24LL, // 2
    0x0B1D1E95803CBB73LL, // 3
    0x0F879D85E7AB7F6FLL, // 4
    0x13EA9C5C52732915LL, // 5
    0x18440933FFD2011BLL, // 6
    0x1C91DFF191E15D07LL, // 7
    0x20D22D0F2017900DLL, // 8
    0x25031040C1E626EFLL, // 9
    0x2922BEEBA163019DLL, // 10
    0x2D2F866A3C5122D3LL, // 11
    0x3127CE192059EF64LL, // 12
    0x350A1928231CB01ALL, // 13
    0x38D5082CD4FCC414LL, // 14
    0x3C875A73B33ADA6BLL, // 15
    0x401FEF0E67CD47D3LL, // 16
    0x439DC59E3077B59CLL, // 17
    0x46FFFEDA4FC0A316LL, // 18
    0x4A45DCD32E9CAA91LL, // 19
    0x4D6EC2F3922E5C24LL, // 20
    0x507A35C1FB354670LL, // 21
    0x5367DA64EA5F1C63LL, // 22
    0x563775ED5B93E26ELL, // 23
    0x58E8EC6B50CB95F8LL, // 24
    0x5B7C3FD0B999197DLL, // 25
    0x5DF18EA7664D810ELL, // 26
    0x6049129F03B5CD6DLL, // 27
    0x62831EF856A48427LL, // 28
    0x64A01ED314BA206FLL, // 29
    0x66A09363CA89DAA3LL, // 30
    0x688512173EF213F5LL, // 31
    0x6A4E42A8B137E138LL, // 32
    0x6BFCDD302C5B888ALL, // 33
    0x6D91A82DF797EAB8LL, // 34
    0x6F0D7697EBA6A51DLL, // 35
    0x707125ED27F05CF1LL, // 36
    0x71BD9C544C184D8DLL, // 37
    0x72F3C6C7FB380322LL, // 38
    0x74149755088E5CC6LL, // 39
    0x7521036D434271D4LL, // 40
    0x761A02516A02B0CELL, // 41
    0x77008B9461817A43LL, // 42
    0x77D595B95BC6A0FELL, // 43
    0x789A14EE338BB727LL, // 44
    0x794EF9E2D7C53213LL, // 45
    0x79F530BE414FE24DLL, // 46
    0x7A8DA03110886732LL, // 47
    0x7B1928A59B3AA79ELL, // 48
    0x7B98A38CE58D06AELL, // 49
    0x7C0CE2C7BAD3164ALL, // 50
    0x7C76B02ADDE64EF2LL, // 51
    0x7CD6CD1D13EE98F2LL, // 52
    0x7D2DF24DA06E2473LL, // 53
    0x7D7CCF81A5CD98B9LL, // 54
    0x7DC40B76C24FB5D4LL, // 55
    0x7E0443D92DE22661LL, // 56
    0x7E3E0D4B91401720LL, // 57
    0x7E71F37EC9C1DE8DLL, // 58
    0x7EA07957CE6B9051LL, // 59
    0x7ECA1921F1AF6404LL, // 60
    0x7EEF44CBC73DA35BLL, // 61
    0x7F10662D0574233DLL, // 62
    0x7F2DDF53CDDCD427LL, // 63
    0x7F480AD7DF028A76LL, // 64
    0x7F5F3C324B0F66B2LL, // 65
    0x7F73C018698C18A7LL, // 66
    0x7F85DCD8D69F8939LL, // 67
    0x7F95D2B96ED3DA10LL, // 68
    0x7FA3DC55532D71BBLL, // 69
    0x7FB02EFA1DDDC61ELL, // 70
    0x7FBAFB038BAE76E4LL, // 71
    0x7FC46C34F918B3E3LL, // 72
    0x7FCCAA102B95464CLL, // 73
    0x7FD3D828F7D49092LL, // 74
    0x7FDA16756C11CF83LL, // 75
    0x7FDF819A3A7BFE69LL, // 76
    0x7FE4333332A5FEBDLL, // 77
    0x7FE84217AA0DE2B3LL, // 78
    0x7FEBC29AC3100A8BLL, // 79
    0x7FEEC6C78F0D514ELL, // 80
    0x7FF15E9914396F2ALL, // 81
    0x7FF3982E4982FB97LL, // 82
    0x7FF57FFA236862D1LL, // 83
    0x7FF720EFD36F4850LL, // 84
    0x7FF884AB61732BC7LL, // 85
    0x7FF9B396CA3B383CLL, // 86
    0x7FFAB50BD1DD3633LL, // 87
    0x7FFB8F72BA84114BLL, // 88
    0x7FFC485E115A3388LL, // 89
    0x7FFCE4A3C3B92B98LL, // 90
    0x7FFD6873AE755E4ALL, // 91
    0x7FFDD76BD840FDA1LL, // 92
    0x7FFE34AA86CE6870LL, // 93
    0x7FFE82DE5CA6A885LL, // 94
    0x7FFEC454ABAA26DFLL, // 95
    0x7FFEFB0625FADB89LL, // 96
    0x7FFF28A214B1160FLL, // 97
    0x7FFF4E983945429DLL, // 98
    0x7FFF6E217C168A6ALL, // 99
    0x7FFF884787F2B986LL, // 100
    0x7FFF9DEB70088602LL, // 101
    0x7FFFAFCB7B419E48LL, // 102
    0x7FFFBE882DABB8F8LL, // 103
    0x7FFFCAA8A65BDA07LL, // 104
    0x7FFFD49E66188754LL, // 105
    0x7FFFDCC891191605LL, // 106
    0x7FFFE376BC4B0583LL, // 107
    0x7FFFE8EB54D33209LL, // 108
    0x7FFFED5DAEE78F4ELL, // 109
    0x7FFFF0FBC7A6933DLL, // 110
    0x7FFFF3EBC43A9213LL, // 111
    0x7FFFF64D375FC4CCLL, // 112
    0x7FFFF83A354A0431LL, // 113
    0x7FFFF9C83CE9BB0DLL, // 114
    0x7FFFFB08FCAC61A6LL, // 115
    0x7FFFFC0AF80A1A6FLL, // 116
    0x7FFFFCDA127DDE76LL, // 117
    0x7FFFFD8003E62E56LL, // 118
    0x7FFFFE04B9BF9C5BLL, // 119
    0x7FFFFE6EA82EF9BDLL, // 120
    0x7FFFFEC30D64CD46LL, // 121
    0x7FFFFF0629856684LL, // 122
    0x7FFFFF3B6CEEE3F1LL, // 123
    0x7FFFFF659E6F7BA6LL, // 124
    0x7FFFFF86FAC1036ALL, // 125
    0x7FFFFFA14E69EDE9LL, // 126
    0x7FFFFFB60AF6ACB7LL, // 127
    0x7FFFFFC65857AECFLL, // 128
    0x7FFFFFD3230F314FLL, // 129
    0x7FFFFFDD27BE0A17LL, // 130
    0x7FFFFFE4FC86CDFFLL, // 131
    0x7FFFFFEB18AA9E4CLL, // 132
    0x7FFFFFEFDAB1FD73LL, // 133
    0x7FFFFFF38D65D499LL, // 134
    0x7FFFFFF66BD0EB8CLL, // 135
    0x7FFFFFF8A4782371LL, // 136
    0x7FFFFFFA5BEF7C27LL, // 137
    0x7FFFFFFBAEEB0B4CLL, // 138
    0x7FFFFFFCB3E55903LL, // 139
    0x7FFFFFFD7C6FE192LL, // 140
    0x7FFFFFFE163E99E3LL, // 141
    0x7FFFFFFE8BFC2558LL, // 142
    0x7FFFFFFEE5F1CE80LL, // 143
    0x7FFFFFFF2A8C31FDLL, // 144
    0x7FFFFFFF5EC3CD18LL, // 145
    0x7FFFFFFF866F376BLL, // 146
    0x7FFFFFFFA483A906LL, // 147
    0x7FFFFFFFBB4780C4LL, // 148
    0x7FFFFFFFCC79BEB2LL, // 149
    0x7FFFFFFFD970CBE1LL, // 150
    0x7FFFFFFFE3326D21LL, // 151
    0x7FFFFFFFEA865AB8LL, // 152
    0x7FFFFFFFF004A7C8LL, // 153
    0x7FFFFFFFF420E4F9LL, // 154
    0x7FFFFFFFF732B791LL, // 155
    0x7FFFFFFFF97C764FLL, // 156
    0x7FFFFFFFFB303DDDLL, // 157
    0x7FFFFFFFFC73D5A3LL, // 158
    0x7FFFFFFFFD63AA57LL, // 159
    0x7FFFFFFFFE15140DLL, // 160
    0x7FFFFFFFFE981196LL, // 161
    0x7FFFFFFFFEF89992LL, // 162
    0x7FFFFFFFFF3F9A0CLL, // 163
    0x7FFFFFFFFF73BA0BLL, // 164
    0x7FFFFFFFFF99EBBBLL, // 165
    0x7FFFFFFFFFB5DAA0LL, // 166
    0x7FFFFFFFFFCA3E7BLL, // 167
    0x7FFFFFFFFFD91985LL, // 168
    0x7FFFFFFFFFE3E70ALL, // 169
    0x7FFFFFFFFFEBBE45LL, // 170
    0x7FFFFFFFFFF16C5CLL, // 171
    0x7FFFFFFFFFF587BELL, // 172
    0x7FFFFFFFFFF87E7FLL, // 173
    0x7FFFFFFFFFFAA108LL, // 174
    0x7FFFFFFFFFFC29F5LL, // 175
    0x7FFFFFFFFFFD43E8LL, // 176
    0x7FFFFFFFFFFE0DD7LL, // 177
    0x7FFFFFFFFFFE9E31LL, // 178
    0x7FFFFFFFFFFF0530LL, // 179
    0x7FFFFFFFFFFF4E88LL, // 180
    0x7FFFFFFFFFFF82AALL, // 181
    0x7FFFFFFFFFFFA7A6LL, // 182
    0x7FFFFFFFFFFFC1D6LL, // 183
    0x7FFFFFFFFFFFD458LL, // 184
    0x7FFFFFFFFFFFE166LL, // 185
    0x7FFFFFFFFFFFEA97LL, // 186
    0x7FFFFFFFFFFFF10CLL, // 187
    0x7FFFFFFFFFFFF594LL, // 188
    0x7FFFFFFFFFFFF8C0LL, // 189
    0x7FFFFFFFFFFFFAF7LL, // 190
    0x7FFFFFFFFFFFFC83LL, // 191
    0x7FFFFFFFFFFFFD96LL, // 192
    0x7FFFFFFFFFFFFE56LL, // 193
    0x7FFFFFFFFFFFFEDALL, // 194
    0x7FFFFFFFFFFFFF36LL, // 195
    0x7FFFFFFFFFFFFF75LL, // 196
    0x7FFFFFFFFFFFFFA1LL, // 197
    0x7FFFFFFFFFFFFFBFLL, // 198
    0x7FFFFFFFFFFFFFD4LL, // 199
    0x7FFFFFFFFFFFFFE2LL, // 200
    0x7FFFFFFFFFFFFFECLL, // 201
    0x7FFFFFFFFFFFFFF2LL, // 202
    0x7FFFFFFFFFFFFFF7LL, // 203
    0x7FFFFFFFFFFFFFFALL, // 204
    0x7FFFFFFFFFFFFFFCLL, // 205
    0x7FFFFFFFFFFFFFFDLL, // 206
    0x7FFFFFFFFFFFFFFELL, // 207
    0x7FFFFFFFFFFFFFFFLL, // 208
}; // cdt_v

// memory requirements:
//      512 samples:  8652 bytes
//      256 samples:  5580 bytes
//      128 samples:  4044 bytes
//       64 samples:  3276 bytes
//       32 samples:  2892 bytes
// table alone: 1672 bytes

#elif defined(_qTESLA_III_speed_)

// Sigma = 10.2, 128-bit precision

#define CDT_ROWS 135
#define CDT_COLS 2

static const int64_t cdt_v[CDT_ROWS*CDT_COLS] = {
    0x0000000000000000LL, 0x0000000000000000LL, // 0
    0x05019F2342B5510CLL, 0x4CD7B09465894A2CLL, // 1
    0x0EF8936E477F8F22LL, 0x6363208540D46A81LL, // 2
    0x18CB03FC0E8D84ADLL, 0x00E045D0CD3E52EBLL, // 3
    0x2261C15E8A4F57E3LL, 0x799EC88203BDB518LL, // 4
    0x2BA749FE946E30ACLL, 0x7459532F454F2C2BLL, // 5
    0x3488598A086B65AFLL, 0x1BB3215C39D0A702LL, // 6
    0x3CF45E2203C37E93LL, 0x19FEB5DC9AB8A030LL, // 7
    0x44DDCECBB7D63DB2LL, 0x57AF2F7EA464B594LL, // 8
    0x4C3A608E45EF7B2BLL, 0x775EBC95847A28B9LL, // 9
    0x530319A45556D18ALL, 0x26B73633F467FE8CLL, // 10
    0x59344411DF74E917LL, 0x0813BEE3DB0A930ALL, // 11
    0x5ECD42A3244B1CD9LL, 0x6157B17ECFE35BE0LL, // 12
    0x63D04CBC960744B4LL, 0x2F1275FA0144B4F2LL, // 13
    0x684216614F39B7E7LL, 0x4976731B80EF6949LL, // 14
    0x6C296A64B1A8024BLL, 0x3ABC64091652340BLL, // 15
    0x6F8EBCDC597936D8LL, 0x0F1B7A484454DD08LL, // 16
    0x727BBBA2C8C9C903LL, 0x580749493EEFD963LL, // 17
    0x74FAE22164C29C97LL, 0x16732C4B4A136721LL, // 18
    0x771714BEC9BCF02FLL, 0x375FE580E9D6C097LL, // 19
    0x78DB474CC920D694LL, 0x6D82BA3526AA83EFLL, // 20
    0x7A5230BF426B2FE4LL, 0x7D989CF77FF88728LL, // 21
    0x7B860D681BA2F584LL, 0x699C522E4F437856LL, // 22
    0x7C806FFEE0D1DF7BLL, 0x4077BA0090A490A4LL, // 23
    0x7D4A20E95AB78E37LL, 0x0E1EC99D8C4A7EBCLL, // 24
    0x7DEB0A96014CA039LL, 0x188C3427E432AE17LL, // 25
    0x7E6A3144EB926484LL, 0x2C046AE21ADC442CLL, // 26
    0x7ECDB456CC34FC6ALL, 0x2C5CAA35D76E76A6LL, // 27
    0x7F1AD71F40A2D63FLL, 0x3FE015C50F7FC951LL, // 28
    0x7F560F416601BCF9LL, 0x171E0F3370F915D2LL, // 29
    0x7F8316C3244DD5B7LL, 0x23A1C16361C2526BLL, // 30
    0x7FA5003C6307FD2DLL, 0x2D4602BB51C738A5LL, // 31
    0x7FBE4BCB46FF7D10LL, 0x0C249EC26261DF42LL, // 32
    0x7FD0FBBE92014AF6LL, 0x24634E5085C4F545LL, // 33
    0x7FDEA82D84C8D138LL, 0x1217AA56D6CFBD62LL, // 34
    0x7FE890F4FE84F8B2LL, 0x7FD4EF4FDAD73B12LL, // 35
    0x7FEFADC946A8C3E5LL, 0x6CA61FCF162BFB58LL, // 36
    0x7FF4BC398FAC532CLL, 0x1018095D55E3A474LL, // 37
    0x7FF84BA5893D5909LL, 0x07B04DF406BF3C54LL, // 38
    0x7FFAC73ED164E46ELL, 0x2065C7F38F7B589FLL, // 39
    0x7FFC7E40D9B9C723LL, 0x69A58DC15BD0E7E9LL, // 40
    0x7FFDAA935414AF3FLL, 0x1C7FAC7155551F42LL, // 41
    0x7FFE760EFA1B4632LL, 0x095D3D1B1FE2D091LL, // 42
    0x7FFEFE9C01CDE231LL, 0x36258D378C114612LL, // 43
    0x7FFF595E2652C4B5LL, 0x71198F3F86DCB271LL, // 44
    0x7FFF951CF928EAB7LL, 0x7E20A9BF5F5B8D45LL, // 45
    0x7FFFBC111AC7BB32LL, 0x2DC3BDDB7E91FF5ALL, // 46
    0x7FFFD538ADF927F1LL, 0x17EDEA3B9747D0BBLL, // 47
    0x7FFFE54F4DA4A32DLL, 0x15EA26E9E8FC8135LL, // 48
    0x7FFFEF804B8F1257LL, 0x3F806D6F58F4BBD5LL, // 49
    0x7FFFF5E52EF2F773LL, 0x15DA110757D1C239LL, // 50
    0x7FFFF9DE58F6B091LL, 0x478FFA13C511566FLL, // 51
    0x7FFFFC505E46D85ALL, 0x096716BB9F80C4D8LL, // 52
    0x7FFFFDCDF8B91533LL, 0x0EF00E80F333EE23LL, // 53
    0x7FFFFEB45C3C9422LL, 0x6CD593F8BE7A21EELL, // 54
    0x7FFFFF3E1FD7A8DFLL, 0x57839D0BCBC1A79BLL, // 55
    0x7FFFFF8FB6DC913CLL, 0x50EA31255B1E02D3LL, // 56
    0x7FFFFFBF92BD3CBFLL, 0x7D543596D46C217DLL, // 57
    0x7FFFFFDB60AEC0F6LL, 0x51C7094571495A81LL, // 58
    0x7FFFFFEB606B8B46LL, 0x2B4F156E3F19C33DLL, // 59
    0x7FFFFFF47E9B0F01LL, 0x4DAA1A678ED72BFFLL, // 60
    0x7FFFFFF9A425B9C5LL, 0x59A08BAA1F779478LL, // 61
    0x7FFFFFFC84B9D150LL, 0x05E8C6F3A5010504LL, // 62
    0x7FFFFFFE1C9328FELL, 0x1C0FD4EAED636FA9LL, // 63
    0x7FFFFFFEFC3E6136LL, 0x5E0EF14EB463A258LL, // 64
    0x7FFFFFFF75BB9523LL, 0x3449872B5BA5C39ELL, // 65
    0x7FFFFFFFB71712D3LL, 0x67A0B22765E70756LL, // 66
    0x7FFFFFFFD9EA002DLL, 0x12E1D7FFECBE1D81LL, // 67
    0x7FFFFFFFEC4AA4B8LL, 0x15EF12504972F1F7LL, // 68
    0x7FFFFFFFF5E5A897LL, 0x0C33EF66C62BDBF0LL, // 69
    0x7FFFFFFFFADEA35ELL, 0x31A71BA3CF1D60A2LL, // 70
    0x7FFFFFFFFD6B542CLL, 0x416291768F655BDFLL, // 71
    0x7FFFFFFFFEB6C791LL, 0x7BB655B09DCFAA60LL, // 72
    0x7FFFFFFFFF5D7CCFLL, 0x45027FDFCCB6FCEELL, // 73
    0x7FFFFFFFFFB0889ELL, 0x5C0644ED6CABE864LL, // 74
    0x7FFFFFFFFFD981F5LL, 0x2BF1A6C61FDE91C2LL, // 75
    0x7FFFFFFFFFED87C4LL, 0x619F982C8554100CLL, // 76
    0x7FFFFFFFFFF738A1LL, 0x3F77B9A4198D4D96LL, // 77
    0x7FFFFFFFFFFBDDDELL, 0x1AB54B65D5BBE028LL, // 78
    0x7FFFFFFFFFFE127ELL, 0x15DF5397C6E179A5LL, // 79
    0x7FFFFFFFFFFF1C00LL, 0x13E6C9ECD285EB63LL, // 80
    0x7FFFFFFFFFFF97A8LL, 0x39AA274972C789A6LL, // 81
    0x7FFFFFFFFFFFD0B3LL, 0x0008D359D4C2B8B3LL, // 82
    0x7FFFFFFFFFFFEAC2LL, 0x3F1317B61209848ALL, // 83
    0x7FFFFFFFFFFFF68DLL, 0x2D2F2EFDF11E97EFLL, // 84
    0x7FFFFFFFFFFFFBD6LL, 0x298F5A37B7F38D6ALL, // 85
    0x7FFFFFFFFFFFFE2ELL, 0x71E53C005619309ALL, // 86
    0x7FFFFFFFFFFFFF36LL, 0x760A7A8B9F413F15LL, // 87
    0x7FFFFFFFFFFFFFA9LL, 0x720C138B7A5B60FFLL, // 88
    0x7FFFFFFFFFFFFFDBLL, 0x3C9BAB8FF63CE22ALL, // 89
    0x7FFFFFFFFFFFFFF0LL, 0x5380B2C6191784F6LL, // 90
    0x7FFFFFFFFFFFFFF9LL, 0x4E5E4A10FF2D7097LL, // 91
    0x7FFFFFFFFFFFFFFDLL, 0x2EEAF427CFC2DF3ALL, // 92
    0x7FFFFFFFFFFFFFFELL, 0x7658E743AE8AD400LL, // 93
    0x7FFFFFFFFFFFFFFFLL, 0x4851C6714099C670LL, // 94
    0x7FFFFFFFFFFFFFFFLL, 0x69B0BF5176794C05LL, // 95
    0x7FFFFFFFFFFFFFFFLL, 0x77255600113257E8LL, // 96
    0x7FFFFFFFFFFFFFFFLL, 0x7C84EEFFC1569297LL, // 97
    0x7FFFFFFFFFFFFFFFLL, 0x7EA5062E79846C97LL, // 98
    0x7FFFFFFFFFFFFFFFLL, 0x7F7A2B7D64797F46LL, // 99
    0x7FFFFFFFFFFFFFFFLL, 0x7FCCDECD3B50B2D5LL, // 100
    0x7FFFFFFFFFFFFFFFLL, 0x7FECA6AEF047D605LL, // 101
    0x7FFFFFFFFFFFFFFFLL, 0x7FF8BF4C4E9CB132LL, // 102
    0x7FFFFFFFFFFFFFFFLL, 0x7FFD4EA2021F85CBLL, // 103
    0x7FFFFFFFFFFFFFFFLL, 0x7FFF0279A258D215LL, // 104
    0x7FFFFFFFFFFFFFFFLL, 0x7FFFA3A59C429024LL, // 105
    0x7FFFFFFFFFFFFFFFLL, 0x7FFFDEAD58449050LL, // 106
    0x7FFFFFFFFFFFFFFFLL, 0x7FFFF4172C0D3BC9LL, // 107
    0x7FFFFFFFFFFFFFFFLL, 0x7FFFFBC8B320D44DLL, // 108
    0x7FFFFFFFFFFFFFFFLL, 0x7FFFFE858C7E6F1BLL, // 109
    0x7FFFFFFFFFFFFFFFLL, 0x7FFFFF7C8EC707B0LL, // 110
    0x7FFFFFFFFFFFFFFFLL, 0x7FFFFFD2C808E82DLL, // 111
    0x7FFFFFFFFFFFFFFFLL, 0x7FFFFFF097771644LL, // 112
    0x7FFFFFFFFFFFFFFFLL, 0x7FFFFFFACCA80019LL, // 113
    0x7FFFFFFFFFFFFFFFLL, 0x7FFFFFFE42EB0C08LL, // 114
    0x7FFFFFFFFFFFFFFFLL, 0x7FFFFFFF6C9E38D1LL, // 115
    0x7FFFFFFFFFFFFFFFLL, 0x7FFFFFFFCFA9113BLL, // 116
    0x7FFFFFFFFFFFFFFFLL, 0x7FFFFFFFF04BBB22LL, // 117
    0x7FFFFFFFFFFFFFFFLL, 0x7FFFFFFFFAF256BCLL, // 118
    0x7FFFFFFFFFFFFFFFLL, 0x7FFFFFFFFE63AD0BLL, // 119
    0x7FFFFFFFFFFFFFFFLL, 0x7FFFFFFFFF7DD4A1LL, // 120
    0x7FFFFFFFFFFFFFFFLL, 0x7FFFFFFFFFD74BECLL, // 121
    0x7FFFFFFFFFFFFFFFLL, 0x7FFFFFFFFFF364A9LL, // 122
    0x7FFFFFFFFFFFFFFFLL, 0x7FFFFFFFFFFC21ECLL, // 123
    0x7FFFFFFFFFFFFFFFLL, 0x7FFFFFFFFFFED327LL, // 124
    0x7FFFFFFFFFFFFFFFLL, 0x7FFFFFFFFFFFA574LL, // 125
    0x7FFFFFFFFFFFFFFFLL, 0x7FFFFFFFFFFFE502LL, // 126
    0x7FFFFFFFFFFFFFFFLL, 0x7FFFFFFFFFFFF807LL, // 127
    0x7FFFFFFFFFFFFFFFLL, 0x7FFFFFFFFFFFFDABLL, // 128
    0x7FFFFFFFFFFFFFFFLL, 0x7FFFFFFFFFFFFF53LL, // 129
    0x7FFFFFFFFFFFFFFFLL, 0x7FFFFFFFFFFFFFCELL, // 130
    0x7FFFFFFFFFFFFFFFLL, 0x7FFFFFFFFFFFFFF1LL, // 131
    0x7FFFFFFFFFFFFFFFLL, 0x7FFFFFFFFFFFFFFCLL, // 132
    0x7FFFFFFFFFFFFFFFLL, 0x7FFFFFFFFFFFFFFELL, // 133
    0x7FFFFFFFFFFFFFFFLL, 0x7FFFFFFFFFFFFFFFLL, // 134
}; // cdt_v

// memory requirements:
//     2048 samples: 43660 bytes
//     1024 samples: 23180 bytes
//      512 samples: 12940 bytes
//      256 samples:  7820 bytes
//      128 samples:  5260 bytes
//       64 samples:  3980 bytes
//       32 samples:  3340 bytes
// table alone: 2160 bytes

#elif defined(_qTESLA_III_size_)

// Sigma = 7.64, 128-bit precision

#define CDT_ROWS 101
#define CDT_COLS 2

static const int64_t cdt_v[CDT_ROWS*CDT_COLS] = {
    0x0000000000000000LL, 0x0000000000000000LL, // 0
    0x06AF10C687F8C602LL, 0x0A1BF11BE6B8A206LL, // 1
    0x13F001E8C900EAE8LL, 0x35C9EF9921354D65LL, // 2
    0x20DADE09CBCFE8ABLL, 0x6B1C32D555055819LL, // 3
    0x2D3B153F9152CF42LL, 0x133929E8A7C5243CLL, // 4
    0x38E2E84A37F4F748LL, 0x202A5B317C24F597LL, // 5
    0x43AD567E2CCA6095LL, 0x47A291646947D0CFLL, // 6
    0x4D7F5C10CDB473CALL, 0x600D4BCD51AD9B6ELL, // 7
    0x56487261877971B9LL, 0x0CE603CCB7DA58ABLL, // 8
    0x5E02575E8A1D1D3FLL, 0x14D716E49F6F4223LL, // 9
    0x64B0327F572C0D8DLL, 0x045AED0C7AB74F02LL, // 10
    0x6A5D3AFA5891DB4ALL, 0x2A88C6698DF31561LL, // 11
    0x6F1B0A9A12688B97LL, 0x27766EFAB180ACD5LL, // 12
    0x72FFCA96B1D72059LL, 0x61420EBD93A219E6LL, // 13
    0x7624649F28A665DALL, 0x1EF166744A356846LL, // 14
    0x78A2DAF68C6B49D8LL, 0x2EFACB92E96BD0FFLL, // 15
    0x7A94E0C44B317473LL, 0x3A4F31B0604897A6LL, // 16
    0x7C12C1115D0B0D45LL, 0x5B2C119BCF1DF74FLL, // 17
    0x7D3298DCD5E3DD65LL, 0x382C29E298949339LL, // 18
    0x7E07E04CCB4C7461LL, 0x5D319E9892228B8BLL, // 19
    0x7EA338E78DE0714BLL, 0x65E70506B364D3F8LL, // 20
    0x7F1273248ADCBCD1LL, 0x7CD6217DBE59CA6CLL, // 21
    0x7F60BC5493FF34A1LL, 0x3A6A6FEEC85C7B8ALL, // 22
    0x7F96E66E891B02B4LL, 0x6C0F4C55FF76DB6ALL, // 23
    0x7FBBBD26F1AD7992LL, 0x15A34EFF3D6CA3EDLL, // 24
    0x7FD45E4B8BDAFBE4LL, 0x5E0843EA8D8E186ALL, // 25
    0x7FE48E2685840E89LL, 0x4215D1146206A3F4LL, // 26
    0x7FEF034EAD0C2667LL, 0x0827C658843F39D7LL, // 27
    0x7FF5A7847DFC04E6LL, 0x5BE8672BFB3B8229LL, // 28
    0x7FF9CCF259E2D519LL, 0x02FD2C02A2FA4686LL, // 29
    0x7FFC5855605E9B85LL, 0x690B9EEFE205B714LL, // 30
    0x7FFDE14AB5B5B320LL, 0x7B0C1313E92B5FFELL, // 31
    0x7FFECA52A281EB81LL, 0x59119A617724CB14LL, // 32
    0x7FFF522AAFD425B1LL, 0x56330A1C7D2681B5LL, // 33
    0x7FFFA002D11BAFD5LL, 0x73AEFB419D332495LL, // 34
    0x7FFFCBDC7D73C956LL, 0x4B2E21A286F1232DLL, // 35
    0x7FFFE424966CE8A0LL, 0x5E85EE0CBF00B14BLL, // 36
    0x7FFFF15C379F0405LL, 0x6899F8A8C149C4C8LL, // 37
    0x7FFFF86EC1181A58LL, 0x01A586F3E85E2210LL, // 38
    0x7FFFFC2717DFEDCDLL, 0x7047196E69E427BFLL, // 39
    0x7FFFFE1383488053LL, 0x0C3EA89B51BB1708LL, // 40
    0x7FFFFF0DCCCD6E37LL, 0x3008BBDC75B63558LL, // 41
    0x7FFFFF8ADAEA47C7LL, 0x68AEA7AB0D6CC663LL, // 42
    0x7FFFFFC846F2A5F3LL, 0x5C5DAEFCCF702193LL, // 43
    0x7FFFFFE5EEC4EEE2LL, 0x082F49A4ACD09208LL, // 44
    0x7FFFFFF401F68441LL, 0x5EDBB11915547C2BLL, // 45
    0x7FFFFFFA930B6B9ELL, 0x76D6978678B06667LL, // 46
    0x7FFFFFFD96093E4BLL, 0x4168C9691C3C21E5LL, // 47
    0x7FFFFFFEF1A0D49DLL, 0x0EC03A54511A4883LL, // 48
    0x7FFFFFFF8BAC8E89LL, 0x17A95BC791A474FELL, // 49
    0x7FFFFFFFCEC8CD46LL, 0x45262801843EA003LL, // 50
    0x7FFFFFFFEB86455ALL, 0x0C76A934A8A64AC5LL, // 51
    0x7FFFFFFFF79F9928LL, 0x5412179720312335LL, // 52
    0x7FFFFFFFFCA15AB0LL, 0x7D38CF8B07A8460FLL, // 53
    0x7FFFFFFFFEAAC4D3LL, 0x26E395279B7BD911LL, // 54
    0x7FFFFFFFFF7B469CLL, 0x04109CAF7387E9E2LL, // 55
    0x7FFFFFFFFFCD3D1FLL, 0x4856FC3C08BC3647LL, // 56
    0x7FFFFFFFFFECE921LL, 0x13501CD50F0D3158LL, // 57
    0x7FFFFFFFFFF8F0FBLL, 0x747824F2AA24EE46LL, // 58
    0x7FFFFFFFFFFD6F01LL, 0x30F1823AE158EA96LL, // 59
    0x7FFFFFFFFFFF1521LL, 0x34F9277056C617FFLL, // 60
    0x7FFFFFFFFFFFAD71LL, 0x3AEDB7592990FE4ALL, // 61
    0x7FFFFFFFFFFFE377LL, 0x5CBA789DA208D802LL, // 62
    0x7FFFFFFFFFFFF64DLL, 0x754B9BD3B3B951ABLL, // 63
    0x7FFFFFFFFFFFFCC2LL, 0x5A9DC64A9BF4AB2CLL, // 64
    0x7FFFFFFFFFFFFEEFLL, 0x498E73CD26E5E445LL, // 65
    0x7FFFFFFFFFFFFFA8LL, 0x0145F10A9BF17681LL, // 66
    0x7FFFFFFFFFFFFFE4LL, 0x0760D5707D40D764LL, // 67
    0x7FFFFFFFFFFFFFF7LL, 0x234859EF1CAC84E7LL, // 68
    0x7FFFFFFFFFFFFFFDLL, 0x2930F8163C28CC31LL, // 69
    0x7FFFFFFFFFFFFFFFLL, 0x1888C865A64AA89FLL, // 70
    0x7FFFFFFFFFFFFFFFLL, 0x614C254E6610DE74LL, // 71
    0x7FFFFFFFFFFFFFFFLL, 0x770AE4E654D09B48LL, // 72
    0x7FFFFFFFFFFFFFFFLL, 0x7D6E3F2639947DD2LL, // 73
    0x7FFFFFFFFFFFFFFFLL, 0x7F46819904C2FA9ELL, // 74
    0x7FFFFFFFFFFFFFFFLL, 0x7FCC91C98A1998D1LL, // 75
    0x7FFFFFFFFFFFFFFFLL, 0x7FF1FAFAC180CCF9LL, // 76
    0x7FFFFFFFFFFFFFFFLL, 0x7FFC3E23632758DBLL, // 77
    0x7FFFFFFFFFFFFFFFLL, 0x7FFF02903C4298B7LL, // 78
    0x7FFFFFFFFFFFFFFFLL, 0x7FFFBE593C1C05EALL, // 79
    0x7FFFFFFFFFFFFFFFLL, 0x7FFFEF47AFAB585ALL, // 80
    0x7FFFFFFFFFFFFFFFLL, 0x7FFFFBD0472DAC07LL, // 81
    0x7FFFFFFFFFFFFFFFLL, 0x7FFFFEF82EF09850LL, // 82
    0x7FFFFFFFFFFFFFFFLL, 0x7FFFFFC0276674E9LL, // 83
    0x7FFFFFFFFFFFFFFFLL, 0x7FFFFFF0CF2FC511LL, // 84
    0x7FFFFFFFFFFFFFFFLL, 0x7FFFFFFC725C53FBLL, // 85
    0x7FFFFFFFFFFFFFFFLL, 0x7FFFFFFF2ED0C89FLL, // 86
    0x7FFFFFFFFFFFFFFFLL, 0x7FFFFFFFD0B50253LL, // 87
    0x7FFFFFFFFFFFFFFFLL, 0x7FFFFFFFF57D0813LL, // 88
    0x7FFFFFFFFFFFFFFFLL, 0x7FFFFFFFFDB3FD3ALL, // 89
    0x7FFFFFFFFFFFFFFFLL, 0x7FFFFFFFFF81AE97LL, // 90
    0x7FFFFFFFFFFFFFFFLL, 0x7FFFFFFFFFE55287LL, // 91
    0x7FFFFFFFFFFFFFFFLL, 0x7FFFFFFFFFFA7605LL, // 92
    0x7FFFFFFFFFFFFFFFLL, 0x7FFFFFFFFFFEDE90LL, // 93
    0x7FFFFFFFFFFFFFFFLL, 0x7FFFFFFFFFFFC5EBLL, // 94
    0x7FFFFFFFFFFFFFFFLL, 0x7FFFFFFFFFFFF48ALL, // 95
    0x7FFFFFFFFFFFFFFFLL, 0x7FFFFFFFFFFFFDC7LL, // 96
    0x7FFFFFFFFFFFFFFFLL, 0x7FFFFFFFFFFFFF93LL, // 97
    0x7FFFFFFFFFFFFFFFLL, 0x7FFFFFFFFFFFFFEBLL, // 98
    0x7FFFFFFFFFFFFFFFLL, 0x7FFFFFFFFFFFFFFCLL, // 99
    0x7FFFFFFFFFFFFFFFLL, 0x7FFFFFFFFFFFFFFFLL, // 100
}; // cdt_v

// memory requirements:
//     1024 samples: 22500 bytes
//      512 samples: 12260 bytes
//      256 samples:  7140 bytes
//      128 samples:  4580 bytes
//       64 samples:  3300 bytes
//       32 samples:  2660 bytes
// table alone: 1616 bytes

#endif 

#endif 