/*************************************************************************************
* qTESLA: an efficient post-quantum signature scheme based on the R-LWE problem
*
* Abstract: CDT constants for the Gaussian sampler
**************************************************************************************/

#ifndef CDTSAMP
#define CDTSAMP

#include <stdint.h>
#include "params.h"


#if defined(_qTESLA_I_)

// Sigma = 22.93, 64-bit precision

#define CDT_ROWS 207
#define CDT_COLS 2

static const int32_t cdt_v[CDT_ROWS*CDT_COLS] = {
    0x00000000L, 0x00000000L, // 0
    0x023A1B3FL, 0x4A499901L, // 1
    0x06AD3C4CL, 0x0CA08592L, // 2
    0x0B1D1E95L, 0x401E5DB9L, // 3
    0x0F879D85L, 0x73D5BFB7L, // 4
    0x13EA9C5CL, 0x2939948AL, // 5
    0x18440933L, 0x7FE9008DL, // 6
    0x1C91DFF1L, 0x48F0AE83L, // 7
    0x20D22D0FL, 0x100BC806L, // 8
    0x25031040L, 0x60F31377L, // 9
    0x2922BEEBL, 0x50B180CFL, // 10
    0x2D2F866AL, 0x1E289169L, // 11
    0x3127CE19L, 0x102CF7B2L, // 12
    0x350A1928L, 0x118E580DL, // 13
    0x38D5082CL, 0x6A7E620AL, // 14
    0x3C875A73L, 0x599D6D36L, // 15
    0x401FEF0EL, 0x33E6A3E9L, // 16
    0x439DC59EL, 0x183BDACEL, // 17
    0x46FFFEDAL, 0x27E0518BL, // 18
    0x4A45DCD3L, 0x174E5549L, // 19
    0x4D6EC2F3L, 0x49172E12L, // 20
    0x507A35C1L, 0x7D9AA338L, // 21
    0x5367DA64L, 0x752F8E31L, // 22
    0x563775EDL, 0x2DC9F137L, // 23
    0x58E8EC6BL, 0x2865CAFCL, // 24
    0x5B7C3FD0L, 0x5CCC8CBEL, // 25
    0x5DF18EA7L, 0x3326C087L, // 26
    0x6049129FL, 0x01DAE6B6L, // 27
    0x62831EF8L, 0x2B524213L, // 28
    0x64A01ED3L, 0x0A5D1038L, // 29
    0x66A09363L, 0x6544ED52L, // 30
    0x68851217L, 0x1F7909FBL, // 31
    0x6A4E42A8L, 0x589BF09CL, // 32
    0x6BFCDD30L, 0x162DC445L, // 33
    0x6D91A82DL, 0x7BCBF55CL, // 34
    0x6F0D7697L, 0x75D3528FL, // 35
    0x707125EDL, 0x13F82E79L, // 36
    0x71BD9C54L, 0x260C26C7L, // 37
    0x72F3C6C7L, 0x7D9C0191L, // 38
    0x74149755L, 0x04472E63L, // 39
    0x7521036DL, 0x21A138EAL, // 40
    0x761A0251L, 0x35015867L, // 41
    0x77008B94L, 0x30C0BD22L, // 42
    0x77D595B9L, 0x2DE3507FL, // 43
    0x789A14EEL, 0x19C5DB94L, // 44
    0x794EF9E2L, 0x6BE2990AL, // 45
    0x79F530BEL, 0x20A7F127L, // 46
    0x7A8DA031L, 0x08443399L, // 47
    0x7B1928A5L, 0x4D9D53CFL, // 48
    0x7B98A38CL, 0x72C68357L, // 49
    0x7C0CE2C7L, 0x5D698B25L, // 50
    0x7C76B02AL, 0x6EF32779L, // 51
    0x7CD6CD1DL, 0x09F74C79L, // 52
    0x7D2DF24DL, 0x5037123AL, // 53
    0x7D7CCF81L, 0x52E6CC5DL, // 54
    0x7DC40B76L, 0x6127DAEAL, // 55
    0x7E0443D9L, 0x16F11331L, // 56
    0x7E3E0D4BL, 0x48A00B90L, // 57
    0x7E71F37EL, 0x64E0EF47L, // 58
    0x7EA07957L, 0x6735C829L, // 59
    0x7ECA1921L, 0x78D7B202L, // 60
    0x7EEF44CBL, 0x639ED1AEL, // 61
    0x7F10662DL, 0x02BA119FL, // 62
    0x7F2DDF53L, 0x66EE6A14L, // 63
    0x7F480AD7L, 0x6F81453BL, // 64
    0x7F5F3C32L, 0x2587B359L, // 65
    0x7F73C018L, 0x34C60C54L, // 66
    0x7F85DCD8L, 0x6B4FC49DL, // 67
    0x7F95D2B9L, 0x3769ED08L, // 68
    0x7FA3DC55L, 0x2996B8DEL, // 69
    0x7FB02EFAL, 0x0EEEE30FL, // 70
    0x7FBAFB03L, 0x45D73B72L, // 71
    0x7FC46C34L, 0x7C8C59F2L, // 72
    0x7FCCAA10L, 0x15CAA326L, // 73
    0x7FD3D828L, 0x7BEA4849L, // 74
    0x7FDA1675L, 0x3608E7C2L, // 75
    0x7FDF819AL, 0x1D3DFF35L, // 76
    0x7FE43333L, 0x1952FF5FL, // 77
    0x7FE84217L, 0x5506F15AL, // 78
    0x7FEBC29AL, 0x61880546L, // 79
    0x7FEEC6C7L, 0x4786A8A8L, // 80
    0x7FF15E99L, 0x0A1CB795L, // 81
    0x7FF3982EL, 0x24C17DCCL, // 82
    0x7FF57FFAL, 0x11B43169L, // 83
    0x7FF720EFL, 0x69B7A428L, // 84
    0x7FF884ABL, 0x30B995E4L, // 85
    0x7FF9B396L, 0x651D9C1EL, // 86
    0x7FFAB50BL, 0x68EE9B1AL, // 87
    0x7FFB8F72L, 0x5D4208A6L, // 88
    0x7FFC485EL, 0x08AD19C4L, // 89
    0x7FFCE4A3L, 0x61DC95CCL, // 90
    0x7FFD6873L, 0x573AAF25L, // 91
    0x7FFDD76BL, 0x6C207ED1L, // 92
    0x7FFE34AAL, 0x43673438L, // 93
    0x7FFE82DEL, 0x2E535443L, // 94
    0x7FFEC454L, 0x55D51370L, // 95
    0x7FFEFB06L, 0x12FD6DC5L, // 96
    0x7FFF28A2L, 0x0A588B08L, // 97
    0x7FFF4E98L, 0x1CA2A14FL, // 98
    0x7FFF6E21L, 0x3E0B4535L, // 99
    0x7FFF8847L, 0x43F95CC4L, // 100
    0x7FFF9DEBL, 0x38044301L, // 101
    0x7FFFAFCBL, 0x3DA0CF24L, // 102
    0x7FFFBE88L, 0x16D5DC7CL, // 103
    0x7FFFCAA8L, 0x532DED04L, // 104
    0x7FFFD49EL, 0x330C43AAL, // 105
    0x7FFFDCC8L, 0x488C8B03L, // 106
    0x7FFFE376L, 0x5E2582C2L, // 107
    0x7FFFE8EBL, 0x2A699905L, // 108
    0x7FFFED5DL, 0x5773C7A7L, // 109
    0x7FFFF0FBL, 0x63D3499FL, // 110
    0x7FFFF3EBL, 0x621D490AL, // 111
    0x7FFFF64DL, 0x1BAFE266L, // 112
    0x7FFFF83AL, 0x1AA50219L, // 113
    0x7FFFF9C8L, 0x1E74DD87L, // 114
    0x7FFFFB08L, 0x7E5630D3L, // 115
    0x7FFFFC0AL, 0x7C050D38L, // 116
    0x7FFFFCDAL, 0x093EEF3BL, // 117
    0x7FFFFD80L, 0x01F3172BL, // 118
    0x7FFFFE04L, 0x5CDFCE2EL, // 119
    0x7FFFFE6EL, 0x54177CDFL, // 120
    0x7FFFFEC3L, 0x06B266A3L, // 121
    0x7FFFFF06L, 0x14C2B342L, // 122
    0x7FFFFF3BL, 0x367771F9L, // 123
    0x7FFFFF65L, 0x4F37BDD3L, // 124
    0x7FFFFF86L, 0x7D6081B5L, // 125
    0x7FFFFFA1L, 0x2734F6F5L, // 126
    0x7FFFFFB6L, 0x057B565CL, // 127
    0x7FFFFFC6L, 0x2C2BD768L, // 128
    0x7FFFFFD3L, 0x118798A8L, // 129
    0x7FFFFFDDL, 0x13DF050CL, // 130
    0x7FFFFFE4L, 0x7E436700L, // 131
    0x7FFFFFEBL, 0x0C554F26L, // 132
    0x7FFFFFEFL, 0x6D58FEBAL, // 133
    0x7FFFFFF3L, 0x46B2EA4DL, // 134
    0x7FFFFFF6L, 0x35E875C6L, // 135
    0x7FFFFFF8L, 0x523C11B9L, // 136
    0x7FFFFFFAL, 0x2DF7BE14L, // 137
    0x7FFFFFFBL, 0x577585A6L, // 138
    0x7FFFFFFCL, 0x59F2AC82L, // 139
    0x7FFFFFFDL, 0x3E37F0C9L, // 140
    0x7FFFFFFEL, 0x0B1F4CF2L, // 141
    0x7FFFFFFEL, 0x45FE12ACL, // 142
    0x7FFFFFFEL, 0x72F8E740L, // 143
    0x7FFFFFFFL, 0x154618FFL, // 144
    0x7FFFFFFFL, 0x2F61E68CL, // 145
    0x7FFFFFFFL, 0x43379BB6L, // 146
    0x7FFFFFFFL, 0x5241D483L, // 147
    0x7FFFFFFFL, 0x5DA3C063L, // 148
    0x7FFFFFFFL, 0x663CDF59L, // 149
    0x7FFFFFFFL, 0x6CB865F1L, // 150
    0x7FFFFFFFL, 0x71993691L, // 151
    0x7FFFFFFFL, 0x75432D5CL, // 152
    0x7FFFFFFFL, 0x780253E4L, // 153
    0x7FFFFFFFL, 0x7A10727DL, // 154
    0x7FFFFFFFL, 0x7B995BC9L, // 155
    0x7FFFFFFFL, 0x7CBE3B28L, // 156
    0x7FFFFFFFL, 0x7D981EEFL, // 157
    0x7FFFFFFFL, 0x7E39EAD2L, // 158
    0x7FFFFFFFL, 0x7EB1D52CL, // 159
    0x7FFFFFFFL, 0x7F0A8A07L, // 160
    0x7FFFFFFFL, 0x7F4C08CCL, // 161
    0x7FFFFFFFL, 0x7F7C4CC9L, // 162
    0x7FFFFFFFL, 0x7F9FCD06L, // 163
    0x7FFFFFFFL, 0x7FB9DD06L, // 164
    0x7FFFFFFFL, 0x7FCCF5DEL, // 165
    0x7FFFFFFFL, 0x7FDAED50L, // 166
    0x7FFFFFFFL, 0x7FE51F3EL, // 167
    0x7FFFFFFFL, 0x7FEC8CC3L, // 168
    0x7FFFFFFFL, 0x7FF1F385L, // 169
    0x7FFFFFFFL, 0x7FF5DF23L, // 170
    0x7FFFFFFFL, 0x7FF8B62FL, // 171
    0x7FFFFFFFL, 0x7FFAC3DFL, // 172
    0x7FFFFFFFL, 0x7FFC3F40L, // 173
    0x7FFFFFFFL, 0x7FFD5084L, // 174
    0x7FFFFFFFL, 0x7FFE14FBL, // 175
    0x7FFFFFFFL, 0x7FFEA1F4L, // 176
    0x7FFFFFFFL, 0x7FFF06ECL, // 177
    0x7FFFFFFFL, 0x7FFF4F19L, // 178
    0x7FFFFFFFL, 0x7FFF8298L, // 179
    0x7FFFFFFFL, 0x7FFFA744L, // 180
    0x7FFFFFFFL, 0x7FFFC155L, // 181
    0x7FFFFFFFL, 0x7FFFD3D3L, // 182
    0x7FFFFFFFL, 0x7FFFE0EBL, // 183
    0x7FFFFFFFL, 0x7FFFEA2CL, // 184
    0x7FFFFFFFL, 0x7FFFF0B3L, // 185
    0x7FFFFFFFL, 0x7FFFF54CL, // 186
    0x7FFFFFFFL, 0x7FFFF886L, // 187
    0x7FFFFFFFL, 0x7FFFFACAL, // 188
    0x7FFFFFFFL, 0x7FFFFC60L, // 189
    0x7FFFFFFFL, 0x7FFFFD7CL, // 190
    0x7FFFFFFFL, 0x7FFFFE42L, // 191
    0x7FFFFFFFL, 0x7FFFFECBL, // 192
    0x7FFFFFFFL, 0x7FFFFF2BL, // 193
    0x7FFFFFFFL, 0x7FFFFF6DL, // 194
    0x7FFFFFFFL, 0x7FFFFF9BL, // 195
    0x7FFFFFFFL, 0x7FFFFFBBL, // 196
    0x7FFFFFFFL, 0x7FFFFFD1L, // 197
    0x7FFFFFFFL, 0x7FFFFFE0L, // 198
    0x7FFFFFFFL, 0x7FFFFFEAL, // 199
    0x7FFFFFFFL, 0x7FFFFFF1L, // 200
    0x7FFFFFFFL, 0x7FFFFFF6L, // 201
    0x7FFFFFFFL, 0x7FFFFFF9L, // 202
    0x7FFFFFFFL, 0x7FFFFFFCL, // 203
    0x7FFFFFFFL, 0x7FFFFFFDL, // 204
    0x7FFFFFFFL, 0x7FFFFFFEL, // 205
    0x7FFFFFFFL, 0x7FFFFFFFL, // 206
}; // cdt_v

// memory requirements:
//      512 samples:  8628 bytes
//      256 samples:  5556 bytes
//      128 samples:  4020 bytes
//       64 samples:  3252 bytes
//       32 samples:  2868 bytes
// table alone: 1656 bytes

#elif defined(_qTESLA_III_speed_)

// Sigma = 10.2, 128-bit precision

#define CDT_ROWS 133
#define CDT_COLS 4

static const int32_t cdt_v[CDT_ROWS*CDT_COLS] = {
    0x00000000L, 0x00000000L, 0x00000000L, 0x00000000L, // 0
    0x05019F23L, 0x215AA886L, 0x266BD84AL, 0x1962528BL, // 1
    0x0EF8936EL, 0x23BFC791L, 0x31B19042L, 0x50351AA0L, // 2
    0x18CB03FCL, 0x0746C256L, 0x407022E8L, 0x334F94BBL, // 3
    0x2261C15EL, 0x4527ABF1L, 0x7CCF6441L, 0x00EF6D46L, // 4
    0x2BA749FEL, 0x4A371856L, 0x3A2CA997L, 0x5153CB0AL, // 5
    0x3488598AL, 0x0435B2D7L, 0x4DD990AEL, 0x0E7429C0L, // 6
    0x3CF45E22L, 0x01E1BF49L, 0x4CFF5AEEL, 0x26AE280CL, // 7
    0x44DDCECBL, 0x5BEB1ED9L, 0x2BD797BFL, 0x29192D65L, // 8
    0x4C3A608EL, 0x22F7BD95L, 0x7BAF5E4AL, 0x611E8A2EL, // 9
    0x530319A4L, 0x2AAB68C5L, 0x135B9B19L, 0x7D19FFA3L, // 10
    0x59344411L, 0x6FBA748BL, 0x4409DF71L, 0x76C2A4C2L, // 11
    0x5ECD42A3L, 0x12258E6CL, 0x70ABD8BFL, 0x33F8D6F8L, // 12
    0x63D04CBCL, 0x4B03A25AL, 0x17893AFDL, 0x00512D3CL, // 13
    0x68421661L, 0x279CDBF3L, 0x64BB398DL, 0x603BDA52L, // 14
    0x6C296A64L, 0x58D40125L, 0x5D5E3204L, 0x45948D03L, // 15
    0x6F8EBCDCL, 0x2CBC9B6CL, 0x078DBD24L, 0x11153742L, // 16
    0x727BBBA2L, 0x6464E481L, 0x6C03A4A4L, 0x4FBBF658L, // 17
    0x74FAE221L, 0x32614E4BL, 0x4B399625L, 0x5284D9C8L, // 18
    0x771714BEL, 0x64DE7817L, 0x5BAFF2C0L, 0x3A75B026L, // 19
    0x78DB474CL, 0x64906B4AL, 0x36C15D1AL, 0x49AAA0FCL, // 20
    0x7A5230BFL, 0x213597F2L, 0x3ECC4E7BL, 0x5FFE21CAL, // 21
    0x7B860D68L, 0x0DD17AC2L, 0x34CE2917L, 0x13D0DE15L, // 22
    0x7C806FFEL, 0x7068EFBDL, 0x603BDD00L, 0x24292429L, // 23
    0x7D4A20E9L, 0x2D5BC71BL, 0x470F64CEL, 0x63129FAFL, // 24
    0x7DEB0A96L, 0x00A6501CL, 0x4C461A13L, 0x790CAB86L, // 25
    0x7E6A3144L, 0x75C93242L, 0x16023571L, 0x06B7110BL, // 26
    0x7ECDB456L, 0x661A7E35L, 0x162E551AL, 0x75DB9DA9L, // 27
    0x7F1AD71FL, 0x20516B1FL, 0x5FF00AE2L, 0x43DFF254L, // 28
    0x7F560F41L, 0x3300DE7CL, 0x4B8F0799L, 0x5C3E4574L, // 29
    0x7F8316C3L, 0x1226EADBL, 0x51D0E0B1L, 0x5870949BL, // 30
    0x7FA5003CL, 0x3183FE96L, 0x56A3015DL, 0x5471CE29L, // 31
    0x7FBE4BCBL, 0x237FBE88L, 0x06124F61L, 0x189877D0L, // 32
    0x7FD0FBBEL, 0x4900A57BL, 0x1231A728L, 0x21713D51L, // 33
    0x7FDEA82DL, 0x4264689CL, 0x090BD52BL, 0x35B3EF58L, // 34
    0x7FE890F4L, 0x7F427C59L, 0x3FEA77A7L, 0x76B5CEC4L, // 35
    0x7FEFADC9L, 0x235461F2L, 0x76530FE7L, 0x458AFED6L, // 36
    0x7FF4BC39L, 0x47D62996L, 0x080C04AEL, 0x5578E91DL, // 37
    0x7FF84BA5L, 0x449EAC84L, 0x43D826FAL, 0x01AFCF15L, // 38
    0x7FFAC73EL, 0x68B27237L, 0x1032E3F9L, 0x63DED628L, // 39
    0x7FFC7E40L, 0x6CDCE391L, 0x74D2C6E0L, 0x56F439FAL, // 40
    0x7FFDAA93L, 0x2A0A579FL, 0x4E3FD638L, 0x555547D0L, // 41
    0x7FFE760EL, 0x7D0DA319L, 0x04AE9E8DL, 0x47F8B424L, // 42
    0x7FFEFE9CL, 0x00E6F118L, 0x5B12C69BL, 0x63045184L, // 43
    0x7FFF595EL, 0x1329625AL, 0x788CC79FL, 0x61B72C9CL, // 44
    0x7FFF951CL, 0x7C94755BL, 0x7F1054DFL, 0x57D6E351L, // 45
    0x7FFFBC11L, 0x0D63DD99L, 0x16E1DEEDL, 0x5FA47FD6L, // 46
    0x7FFFD538L, 0x56FC93F8L, 0x4BF6F51DL, 0x65D1F42FL, // 47
    0x7FFFE54FL, 0x26D25196L, 0x4AF51374L, 0x7A3F204DL, // 48
    0x7FFFEF80L, 0x25C7892BL, 0x5FC036B7L, 0x563D2EF5L, // 49
    0x7FFFF5E5L, 0x17797BB9L, 0x4AED0883L, 0x55F4708EL, // 50
    0x7FFFF9DEL, 0x2C7B5848L, 0x63C7FD09L, 0x7144559CL, // 51
    0x7FFFFC50L, 0x2F236C2DL, 0x04B38B5DL, 0x67E03136L, // 52
    0x7FFFFDCDL, 0x7C5C8A99L, 0x47780740L, 0x3CCCFB89L, // 53
    0x7FFFFEB4L, 0x2E1E4A11L, 0x366AC9FCL, 0x2F9E887CL, // 54
    0x7FFFFF3EL, 0x0FEBD46FL, 0x6BC1CE85L, 0x72F069E7L, // 55
    0x7FFFFF8FL, 0x5B6E489EL, 0x28751892L, 0x56C780B5L, // 56
    0x7FFFFFBFL, 0x495E9E5FL, 0x7EAA1ACBL, 0x351B085FL, // 57
    0x7FFFFFDBL, 0x3057607BL, 0x28E384A2L, 0x5C5256A0L, // 58
    0x7FFFFFEBL, 0x3035C5A3L, 0x15A78AB7L, 0x0FC670CFL, // 59
    0x7FFFFFF4L, 0x3F4D8780L, 0x66D50D33L, 0x63B5CB00L, // 60
    0x7FFFFFF9L, 0x5212DCE2L, 0x6CD045D5L, 0x07DDE51EL, // 61
    0x7FFFFFFCL, 0x425CE8A8L, 0x02F46379L, 0x69404141L, // 62
    0x7FFFFFFEL, 0x0E49947FL, 0x0E07EA75L, 0x3B58DBEAL, // 63
    0x7FFFFFFEL, 0x7E1F309BL, 0x2F0778A7L, 0x2D18E896L, // 64
    0x7FFFFFFFL, 0x3ADDCA91L, 0x5A24C395L, 0x56E970E7L, // 65
    0x7FFFFFFFL, 0x5B8B8969L, 0x73D05913L, 0x5979C1D5L, // 66
    0x7FFFFFFFL, 0x6CF50016L, 0x4970EBFFL, 0x7B2F8760L, // 67
    0x7FFFFFFFL, 0x7625525CL, 0x0AF78928L, 0x125CBC7EL, // 68
    0x7FFFFFFFL, 0x7AF2D44BL, 0x4619F7B3L, 0x318AF6FCL, // 69
    0x7FFFFFFFL, 0x7D6F51AFL, 0x18D38DD1L, 0x73C75828L, // 70
    0x7FFFFFFFL, 0x7EB5AA16L, 0x20B148BBL, 0x23D956F8L, // 71
    0x7FFFFFFFL, 0x7F5B63C8L, 0x7DDB2AD8L, 0x2773EA98L, // 72
    0x7FFFFFFFL, 0x7FAEBE67L, 0x62813FEFL, 0x732DBF3BL, // 73
    0x7FFFFFFFL, 0x7FD8444FL, 0x2E032276L, 0x5B2AFA19L, // 74
    0x7FFFFFFFL, 0x7FECC0FAL, 0x55F8D363L, 0x07F7A470L, // 75
    0x7FFFFFFFL, 0x7FF6C3E2L, 0x30CFCC16L, 0x21550403L, // 76
    0x7FFFFFFFL, 0x7FFB9C50L, 0x5FBBDCD2L, 0x06635365L, // 77
    0x7FFFFFFFL, 0x7FFDEEEFL, 0x0D5AA5B2L, 0x756EF80AL, // 78
    0x7FFFFFFFL, 0x7FFF093FL, 0x0AEFA9CBL, 0x71B85E69L, // 79
    0x7FFFFFFFL, 0x7FFF8E00L, 0x09F364F6L, 0x34A17AD9L, // 80
    0x7FFFFFFFL, 0x7FFFCBD4L, 0x1CD513A4L, 0x5CB1E269L, // 81
    0x7FFFFFFFL, 0x7FFFE859L, 0x400469ACL, 0x7530AE2DL, // 82
    0x7FFFFFFFL, 0x7FFFF561L, 0x1F898BDBL, 0x04826122L, // 83
    0x7FFFFFFFL, 0x7FFFFB46L, 0x5697977EL, 0x7C47A5FCL, // 84
    0x7FFFFFFFL, 0x7FFFFDEBL, 0x14C7AD1BL, 0x6DFCE35AL, // 85
    0x7FFFFFFFL, 0x7FFFFF17L, 0x38F29E00L, 0x15864C26L, // 86
    0x7FFFFFFFL, 0x7FFFFF9BL, 0x3B053D45L, 0x67D04FC5L, // 87
    0x7FFFFFFFL, 0x7FFFFFD4L, 0x790609C5L, 0x5E96D840L, // 88
    0x7FFFFFFFL, 0x7FFFFFEDL, 0x5E4DD5C7L, 0x7D8F388AL, // 89
    0x7FFFFFFFL, 0x7FFFFFF8L, 0x29C05963L, 0x0645E13DL, // 90
    0x7FFFFFFFL, 0x7FFFFFFCL, 0x672F2508L, 0x3FCB5C26L, // 91
    0x7FFFFFFFL, 0x7FFFFFFEL, 0x57757A13L, 0x73F0B7CEL, // 92
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x3B2C73A1L, 0x6BA2B500L, // 93
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x6428E338L, 0x5026719CL, // 94
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x74D85FA8L, 0x5D9E5301L, // 95
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x7B92AB00L, 0x044C95FAL, // 96
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x7E42777FL, 0x7055A4A6L, // 97
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x7F528317L, 0x1E611B26L, // 98
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FBD15BEL, 0x591E5FD1L, // 99
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FE66F66L, 0x4ED42CB5L, // 100
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FF65357L, 0x3C11F581L, // 101
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFC5FA6L, 0x13A72C4CL, // 102
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFEA751L, 0x0087E173L, // 103
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFF813CL, 0x68963485L, // 104
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFFD1D2L, 0x6710A409L, // 105
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFFEF56L, 0x56112414L, // 106
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFFFA0BL, 0x4B034EF2L, // 107
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFFFDE4L, 0x2CC83513L, // 108
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFFFF42L, 0x631F9BC7L, // 109
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFFFFBEL, 0x23B1C1ECL, // 110
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFFFFE9L, 0x32023A0BL, // 111
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFFFFF8L, 0x25DDC591L, // 112
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFFFFFDL, 0x332A0006L, // 113
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFFFFFFL, 0x10BAC302L, // 114
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFFFFFFL, 0x5B278E34L, // 115
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFFFFFFL, 0x73EA444FL, // 116
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFFFFFFL, 0x7C12EEC8L, // 117
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFFFFFFL, 0x7EBC95AFL, // 118
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFFFFFFL, 0x7F98EB43L, // 119
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FDF7528L, // 120
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FF5D2FBL, // 121
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFCD92AL, // 122
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFF087BL, // 123
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFFB4CAL, // 124
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFFE95DL, // 125
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFFF940L, // 126
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFFFE02L, // 127
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFFFF6BL, // 128
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFFFFD5L, // 129
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFFFFF3L, // 130
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFFFFFCL, // 131
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFFFFFFL, // 132
}; // cdt_v

// memory requirements:
//     2048 samples: 43620 bytes
//     1024 samples: 23140 bytes
//      512 samples: 12900 bytes
//      256 samples:  7780 bytes
//      128 samples:  5220 bytes
//       64 samples:  3940 bytes
//       32 samples:  3300 bytes
// table alone: 2128 bytes

#elif defined(_qTESLA_III_size_)

// Sigma = 7.64, 128-bit precision

#define CDT_ROWS 100
#define CDT_COLS 4

static const int32_t cdt_v[CDT_ROWS*CDT_COLS] = {
    0x00000000L, 0x00000000L, 0x00000000L, 0x00000000L, // 0
    0x06AF10C6L, 0x43FC6301L, 0x050DF88DL, 0x79AE2881L, // 1
    0x13F001E8L, 0x64807574L, 0x1AE4F7CCL, 0x484D5359L, // 2
    0x20DADE09L, 0x65E7F455L, 0x758E196AL, 0x55415606L, // 3
    0x2D3B153FL, 0x48A967A1L, 0x099C94F4L, 0x29F1490FL, // 4
    0x38E2E84AL, 0x1BFA7BA4L, 0x10152D98L, 0x5F093D65L, // 5
    0x43AD567EL, 0x1665304AL, 0x63D148B2L, 0x1A51F433L, // 6
    0x4D7F5C10L, 0x66DA39E5L, 0x3006A5E6L, 0x546B66DBL, // 7
    0x56487261L, 0x43BCB8DCL, 0x467301E6L, 0x2DF6962BL, // 8
    0x5E02575EL, 0x450E8E9FL, 0x4A6B8B72L, 0x27DBD089L, // 9
    0x64B0327FL, 0x2B9606C6L, 0x422D7686L, 0x1EADD3C0L, // 10
    0x6A5D3AFAL, 0x2C48EDA5L, 0x15446334L, 0x637CC558L, // 11
    0x6F1B0A9AL, 0x093445CBL, 0x53BB377DL, 0x2C602B35L, // 12
    0x72FFCA96L, 0x58EB902CL, 0x70A1075EL, 0x64E88679L, // 13
    0x7624649FL, 0x145332EDL, 0x0F78B33AL, 0x128D5A11L, // 14
    0x78A2DAF6L, 0x4635A4ECL, 0x177D65C9L, 0x3A5AF440L, // 15
    0x7A94E0C4L, 0x2598BA39L, 0x5D2798D8L, 0x181225E9L, // 16
    0x7C12C111L, 0x2E8586A2L, 0x6D9608CDL, 0x73C77DD4L, // 17
    0x7D3298DCL, 0x6AF1EEB2L, 0x5C1614F1L, 0x262524CEL, // 18
    0x7E07E04CL, 0x65A63A30L, 0x6E98CF4CL, 0x2488A2E3L, // 19
    0x7EA338E7L, 0x46F038A5L, 0x72F38283L, 0x2CD934FEL, // 20
    0x7F127324L, 0x456E5E68L, 0x7E6B10BEL, 0x6F96729BL, // 21
    0x7F60BC54L, 0x49FF9A50L, 0x5D3537F7L, 0x32171EE2L, // 22
    0x7F96E66EL, 0x448D815AL, 0x3607A62AL, 0x7FDDB6DAL, // 23
    0x7FBBBD26L, 0x78D6BCC9L, 0x0AD1A77FL, 0x4F5B28FBL, // 24
    0x7FD45E4BL, 0x45ED7DF2L, 0x2F0421F5L, 0x2363861AL, // 25
    0x7FE48E26L, 0x42C20744L, 0x610AE88AL, 0x1881A8FDL, // 26
    0x7FEF034EL, 0x56861333L, 0x4413E32CL, 0x210FCE75L, // 27
    0x7FF5A784L, 0x3EFE0273L, 0x2DF43395L, 0x7ECEE08AL, // 28
    0x7FF9CCF2L, 0x2CF16A8CL, 0x417E9601L, 0x28BE91A1L, // 29
    0x7FFC5855L, 0x302F4DC2L, 0x7485CF77L, 0x78816DC5L, // 30
    0x7FFDE14AL, 0x5ADAD990L, 0x3D860989L, 0x7A4AD7FFL, // 31
    0x7FFECA52L, 0x5140F5C0L, 0x6C88CD30L, 0x5DC932C5L, // 32
    0x7FFF522AL, 0x57EA12D8L, 0x6B19850EL, 0x1F49A06DL, // 33
    0x7FFFA002L, 0x688DD7EAL, 0x79D77DA0L, 0x674CC925L, // 34
    0x7FFFCBDCL, 0x3EB9E4ABL, 0x259710D1L, 0x21BC48CBL, // 35
    0x7FFFE424L, 0x4B367450L, 0x2F42F706L, 0x2FC02C52L, // 36
    0x7FFFF15CL, 0x1BCF8202L, 0x744CFC54L, 0x30527132L, // 37
    0x7FFFF86EL, 0x608C0D2CL, 0x00D2C379L, 0x7A178884L, // 38
    0x7FFFFC27L, 0x0BEFF6E6L, 0x78238CB7L, 0x1A7909F0L, // 39
    0x7FFFFE13L, 0x41A44029L, 0x461F544DL, 0x546EC5C2L, // 40
    0x7FFFFF0DL, 0x6666B71BL, 0x58045DEEL, 0x1D6D8D56L, // 41
    0x7FFFFF8AL, 0x6D7523E3L, 0x745753D5L, 0x435B3199L, // 42
    0x7FFFFFC8L, 0x237952F9L, 0x6E2ED77EL, 0x33DC0865L, // 43
    0x7FFFFFE5L, 0x77627771L, 0x0417A4D2L, 0x2B342482L, // 44
    0x7FFFFFF4L, 0x00FB4220L, 0x6F6DD88CL, 0x45551F0BL, // 45
    0x7FFFFFFAL, 0x4985B5CFL, 0x3B6B4BC3L, 0x1E2C199AL, // 46
    0x7FFFFFFDL, 0x4B049F25L, 0x60B464B4L, 0x470F0879L, // 47
    0x7FFFFFFEL, 0x78D06A4EL, 0x47601D2AL, 0x14469220L, // 48
    0x7FFFFFFFL, 0x45D64744L, 0x4BD4ADE3L, 0x64691D3FL, // 49
    0x7FFFFFFFL, 0x676466A3L, 0x22931400L, 0x610FA801L, // 50
    0x7FFFFFFFL, 0x75C322ADL, 0x063B549AL, 0x2A2992B1L, // 51
    0x7FFFFFFFL, 0x7BCFCC94L, 0x2A090BCBL, 0x480C48CDL, // 52
    0x7FFFFFFFL, 0x7E50AD58L, 0x3E9C67C5L, 0x41EA1183L, // 53
    0x7FFFFFFFL, 0x7F556269L, 0x5371CA93L, 0x66DEF644L, // 54
    0x7FFFFFFFL, 0x7FBDA34EL, 0x02084E57L, 0x5CE1FA78L, // 55
    0x7FFFFFFFL, 0x7FE69E8FL, 0x642B7E1EL, 0x022F0D91L, // 56
    0x7FFFFFFFL, 0x7FF67490L, 0x49A80E6AL, 0x43C34C56L, // 57
    0x7FFFFFFFL, 0x7FFC787DL, 0x7A3C1279L, 0x2A893B91L, // 58
    0x7FFFFFFFL, 0x7FFEB780L, 0x5878C11DL, 0x38563AA5L, // 59
    0x7FFFFFFFL, 0x7FFF8A90L, 0x5A7C93B8L, 0x15B18600L, // 60
    0x7FFFFFFFL, 0x7FFFD6B8L, 0x5D76DBACL, 0x4A643F92L, // 61
    0x7FFFFFFFL, 0x7FFFF1BBL, 0x6E5D3C4EL, 0x68823600L, // 62
    0x7FFFFFFFL, 0x7FFFFB26L, 0x7AA5CDE9L, 0x6CEE546BL, // 63
    0x7FFFFFFFL, 0x7FFFFE61L, 0x2D4EE325L, 0x26FD2ACBL, // 64
    0x7FFFFFFFL, 0x7FFFFF77L, 0x64C739E6L, 0x49B97911L, // 65
    0x7FFFFFFFL, 0x7FFFFFD4L, 0x00A2F885L, 0x26FC5DA0L, // 66
    0x7FFFFFFFL, 0x7FFFFFF2L, 0x03B06AB8L, 0x1F5035D9L, // 67
    0x7FFFFFFFL, 0x7FFFFFFBL, 0x51A42CF7L, 0x472B2139L, // 68
    0x7FFFFFFFL, 0x7FFFFFFEL, 0x54987C0BL, 0x0F0A330CL, // 69
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x4C446432L, 0x6992AA28L, // 70
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x70A612A7L, 0x1984379DL, // 71
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x7B857273L, 0x153426D2L, // 72
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x7EB71F93L, 0x0E651F74L, // 73
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FA340CCL, 0x4130BEA7L, // 74
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FE648E4L, 0x62866634L, // 75
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FF8FD7DL, 0x3060333EL, // 76
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFE1F11L, 0x58C9D636L, // 77
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFF8148L, 0x0F10A62EL, // 78
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFFDF2CL, 0x4F07017AL, // 79
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFFF7A3L, 0x6BEAD616L, // 80
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFFFDE8L, 0x11CB6B01L, // 81
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFFFF7CL, 0x0BBC2614L, // 82
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFFFFE0L, 0x09D99D3AL, // 83
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFFFFF8L, 0x33CBF144L, // 84
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFFFFFEL, 0x1C9714FFL, // 85
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFFFFFFL, 0x4BB43228L, // 86
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFFFFFFL, 0x742D4095L, // 87
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFFFFFFL, 0x7D5F4204L, // 88
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFFFFFFL, 0x7F6CFF4EL, // 89
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FE06BA6L, // 90
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FF954A1L, // 91
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFE9D81L, // 92
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFFB7A4L, // 93
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFFF17AL, // 94
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFFFD22L, // 95
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFFFF71L, // 96
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFFFFE5L, // 97
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFFFFFBL, // 98
    0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFFFFFFL, 0x7FFFFFFFL, // 99
}; // cdt_v

// memory requirements:
//     2048 samples: 42960 bytes
//     1024 samples: 22480 bytes
//      512 samples: 12240 bytes
//      256 samples:  7120 bytes
//      128 samples:  4560 bytes
//       64 samples:  3280 bytes
//       32 samples:  2640 bytes
// table alone: 1600 bytes

#endif 

#endif 